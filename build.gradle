// dependencies needed by gradle itself, e.g. external plugins
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.linkedin.pegasus:gradle-plugins:11.0.17'
  }
}

// pegasus encapsulates restli and other libraries
final pegasusVersion = '11.0.17'

// define an extension property called spec
ext.spec = [
    'product' : [
        'pegasus' : [
            'data' : 'com.linkedin.pegasus:data:' + pegasusVersion,
            'generator' : 'com.linkedin.pegasus:generator:' + pegasusVersion,
            'r2Netty' : 'com.linkedin.pegasus:r2-netty:' + pegasusVersion,
            'restliCommon' : 'com.linkedin.pegasus:restli-common:' + pegasusVersion,
            'restliClient' : 'com.linkedin.pegasus:restli-client:' + pegasusVersion,
            'restliServer' : 'com.linkedin.pegasus:restli-server:' + pegasusVersion,
            'restliTools' : 'com.linkedin.pegasus:restli-tools:' + pegasusVersion,
            'gradlePlugins' : 'com.linkedin.pegasus:gradle-plugins:' + pegasusVersion,
            'restliNettyStandalone' : 'com.linkedin.pegasus:restli-netty-standalone:' + pegasusVersion,
            'restliServerStandalone' : 'com.linkedin.pegasus:restli-server-standalone:' + pegasusVersion
        ]
    ]
]

// root and sub-projects get both plugins
allprojects {
  apply plugin: 'idea'
}

// subproject plugins, dependencies and repositories
subprojects {
  apply plugin: 'maven'

  afterEvaluate {
    // add the standard pegasus dependencies wherever the plugin is used
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
        restClientCompile spec.product.pegasus.restliClient
      }
    }
  }

  repositories {
    mavenCentral()
  }
}
